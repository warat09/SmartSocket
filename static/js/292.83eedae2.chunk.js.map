{"version":3,"file":"static/js/292.83eedae2.chunk.js","mappings":"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","sources":["components/user/dashboard/carddashboard.tsx","components/user/dashboard/Circle.tsx","components/chart/useChart.ts","components/user/dashboard/graph.tsx","components/user/dashboard/TableRemainingtime.tsx","components/user/dashboard/TableMaintenance.tsx","view/dashboard/dashboard.tsx"],"sourcesContent":["import { Avatar, Card,CardActionArea, CardContent, Stack, SvgIcon, Typography } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Iconify from '../../iconify';\r\nconst CardWrapper = styled(Card)(({ theme }) => ({\r\n  // backgroundColor: theme.palette.secondary.dark,\r\n  // color: '#fff',\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: `linear-gradient(210.04deg, ${'#16395e'} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n    borderRadius: '50%',\r\n    top: -30,\r\n    right: -180\r\n},\r\n'&:before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: `linear-gradient(140.9deg, ${'#16395e'} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\r\n    borderRadius: '50%',\r\n    top: -160,\r\n    right: -130\r\n}\r\n}));\r\nexport default function CardDashboard(props:any) {\r\n    const { difference, positive = false, sx, value, topic, icon } = props;\r\n    return (\r\n        <CardWrapper sx={sx}>\r\n          <CardActionArea>\r\n        <CardContent>\r\n          <Stack\r\n            alignItems=\"flex-start\"\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            spacing={4}\r\n          >\r\n            <Stack spacing={1}>\r\n              <Typography\r\n                color=\"text.secondary\"\r\n                variant=\"overline\"\r\n              >\r\n                {topic}\r\n              </Typography>\r\n              <Typography variant=\"h4\">\r\n                {value}\r\n              </Typography>\r\n            </Stack>\r\n            <Avatar\r\n              sx={{\r\n                backgroundColor: '#16395e',\r\n                height: 56,\r\n                width: 56\r\n              }}\r\n            >\r\n              <Iconify icon={icon} sx={{width: 40, height: 40 }}/>\r\n              {/* <SvgIcon>\r\n                <CurrencyDollarIcon />\r\n              </SvgIcon> */}\r\n            </Avatar>\r\n          </Stack>\r\n        </CardContent>\r\n        </CardActionArea>\r\n      </CardWrapper>\r\n      \r\n    );\r\n  }","// import PropTypes from 'prop-types';\r\n// import ComputerDesktopIcon from '@heroicons/react/24/solid/ComputerDesktopIcon';\r\n// import DeviceTabletIcon from '@heroicons/react/24/solid/DeviceTabletIcon';\r\n// import PhoneIcon from '@heroicons/react/24/solid/PhoneIcon';\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Card, CardHeader } from '@mui/material';\r\n\r\nimport useChart  from '../../chart/useChart';\r\nimport Chart  from 'react-apexcharts';\r\n\r\nconst CHART_HEIGHT = 372;\r\nconst LEGEND_HEIGHT = 72;\r\n\r\nconst StyledChartWrapper = styled('div')(({ theme }) => ({\r\n  height: CHART_HEIGHT,\r\n  marginTop: theme.spacing(10),\r\n  '& .apexcharts-canvas svg': { height: CHART_HEIGHT },\r\n  '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\r\n    overflow: 'visible',\r\n  },\r\n  '& .apexcharts-legend': {\r\n    height: LEGEND_HEIGHT,\r\n    alignContent: 'center',\r\n    borderTop: `solid 1px ${theme.palette.divider}`,\r\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`,\r\n  },\r\n}));\r\n\r\n// const useChartOptions = (labels:any) => {\r\n//   const theme = useTheme();\r\n\r\n//   return {\r\n//     chart: {\r\n//       background: 'transparent'\r\n//     },\r\n//     dataLabels: {\r\n//       enabled: false\r\n//     },\r\n//     labels,\r\n//     legend: {\r\n//       show: false,\r\n//     },\r\n//     plotOptions: {\r\n//       pie: {\r\n//         expandOnClick: true,\r\n//         donut:{\r\n//           size: '85%',\r\n//           labels:{\r\n//             show: true,\r\n//             value: {\r\n//               show: true,\r\n//               fontSize: '20px',\r\n//               fontFamily: 'Helvetica, Arial, sans-serif',\r\n//               fontWeight: 400,\r\n//               color: undefined,\r\n//               offsetY: 16,\r\n\r\n//             },\r\n//             total:{\r\n//               fontSize: '20px',\r\n//               fontFamily: 'Helvetica, Arial, sans-serif',\r\n//               fontWeight: 600,\r\n//               color: 'gray',\r\n//               show:true,\r\n//               // showAlways:true\r\n//             }\r\n//           }\r\n//         }\r\n//       }\r\n//     },\r\n//     states: {\r\n//       active: {\r\n//         filter: {\r\n//           type: 'none'\r\n//         }\r\n//       },\r\n//       hover: {\r\n//         filter: {\r\n//           type: 'none'\r\n//         }\r\n//       }\r\n//     },\r\n//     stroke: {\r\n//       width: 4\r\n//     },\r\n//     theme: {\r\n//       mode: theme.palette.mode\r\n//     },\r\n//     tooltip: {\r\n//       fillSeriesColor: false\r\n//     },\r\n//     fill: {\r\n//       type: \"gradient\"\r\n//     }\r\n//   };\r\n// };\r\n\r\n// const iconMap:any = {\r\n//   Desktop: (\r\n//     <SvgIcon>\r\n//       {/* <ComputerDesktopIcon /> */}\r\n//     </SvgIcon>\r\n//   ),\r\n//   Tablet: (\r\n//     <SvgIcon>\r\n//       {/* <DeviceTabletIcon /> */}\r\n//     </SvgIcon>\r\n//   ),\r\n//   Phone: (\r\n//     <SvgIcon>\r\n//       {/* <PhoneIcon /> */}\r\n//     </SvgIcon>\r\n//   )\r\n// };\r\n\r\nexport default function OverviewTraffic (props:any) {\r\n  const { chartData,sx } = props;\r\n  const theme = useTheme();\r\n  const chartLabels = chartData.map((i:any) => i.departure);\r\n  const chartSeries = chartData.map((i:any) => Number(i.total));\r\n\r\n  const chartOptions = useChart({\r\n    labels: chartLabels,\r\n    stroke: { colors: [theme.palette.background.paper] },\r\n    legend: { floating: true, horizontalAlign: 'center' },\r\n    dataLabels: { enabled: true, dropShadow: { enabled: false } },\r\n    tooltip: {\r\n      fillSeriesColor: false,\r\n      y: {\r\n        formatter: (seriesName:any) => Number(seriesName),\r\n        title: {\r\n          formatter: (seriesName:any) => `${seriesName}`,\r\n        },\r\n      },\r\n    },\r\n    plotOptions: {\r\n      pie: { donut: { labels: { show: true } } },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Card sx={sx}>\r\n      <CardHeader title=\"Total Departure Rent\" />\r\n      <StyledChartWrapper dir=\"ltr\">\r\n        <Chart type=\"donut\" series={chartSeries} options={chartOptions} height={280} />\r\n      </StyledChartWrapper>\r\n    </Card>\r\n  );\r\n};\r\n\r\n","import merge from 'lodash/merge';\r\n// @mui\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useChart(options:any) {\r\n  const theme = useTheme();\r\n\r\n  const LABEL_TOTAL = {\r\n    show: true,\r\n    label: 'Total',\r\n    color: theme.palette.text.secondary,\r\n    fontSize: theme.typography.subtitle2.fontSize,\r\n    fontWeight: theme.typography.subtitle2.fontWeight,\r\n    lineHeight: theme.typography.subtitle2.lineHeight,\r\n  };\r\n\r\n  const LABEL_VALUE = {\r\n    offsetY: 8,\r\n    color: theme.palette.text.primary,\r\n    fontSize: theme.typography.h3.fontSize,\r\n    fontWeight: theme.typography.h3.fontWeight,\r\n    lineHeight: theme.typography.h3.lineHeight,\r\n  };\r\n\r\n  const baseOptions = {\r\n    // Colors\r\n    colors: [\r\n        theme.palette.primary.main,\r\n        theme.palette.warning.main,\r\n        theme.palette.info.main,\r\n        theme.palette.error.main,\r\n        theme.palette.success.main,\r\n        theme.palette.warning.dark,\r\n      ],\r\n\r\n    // Chart\r\n    chart: {\r\n      toolbar: { show: false },\r\n      zoom: { enabled: false },\r\n      animations: { enabled: false },\r\n      foreColor: theme.palette.text.disabled,\r\n      fontFamily: theme.typography.fontFamily,\r\n    },\r\n\r\n    // States\r\n    states: {\r\n      hover: {\r\n        filter: {\r\n          type: 'lighten',\r\n          value: 0.04,\r\n        },\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: 'darken',\r\n          value: 0.88,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Fill\r\n    fill: {\r\n      opacity: 1,\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.4,\r\n        opacityTo: 0,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n\r\n    // Datalabels\r\n    dataLabels: { enabled: false },\r\n\r\n    // Stroke\r\n    stroke: {\r\n      width: 3,\r\n      curve: 'smooth',\r\n      lineCap: 'round',\r\n    },\r\n\r\n    // Grid\r\n    grid: {\r\n      strokeDashArray: 3,\r\n      borderColor: theme.palette.divider,\r\n      xaxis: {\r\n        lines: {\r\n          show: false,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Xaxis\r\n    xaxis: {\r\n      axisBorder: { show: false },\r\n      axisTicks: { show: false },\r\n    },\r\n\r\n    // Markers\r\n    markers: {\r\n      size: 0,\r\n      strokeColors: theme.palette.background.paper,\r\n    },\r\n\r\n    // Tooltip\r\n    tooltip: {\r\n      x: {\r\n        show: false,\r\n      },\r\n    },\r\n\r\n    // Legend\r\n    legend: {\r\n      show: true,\r\n      fontSize: String(13),\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      markers: {\r\n        radius: 12,\r\n      },\r\n      fontWeight: 500,\r\n      itemMargin: { horizontal: 12 },\r\n      labels: {\r\n        colors: theme.palette.text.primary,\r\n      },\r\n    },\r\n\r\n    // plotOptions\r\n    plotOptions: {\r\n      // Bar\r\n      bar: {\r\n        borderRadius: 4,\r\n        columnWidth: '28%',\r\n        borderRadiusApplication: 'end',\r\n        borderRadiusWhenStacked: 'last',\r\n      },\r\n\r\n      // Pie + Donut\r\n      pie: {\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            value: LABEL_VALUE,\r\n            total: LABEL_TOTAL,\r\n          },\r\n        },\r\n      },\r\n\r\n      // Radialbar\r\n      radialBar: {\r\n        track: {\r\n          strokeWidth: '100%',\r\n          background: alpha(theme.palette.grey[500], 0.16),\r\n        },\r\n        dataLabels: {\r\n          value: LABEL_VALUE,\r\n          total: LABEL_TOTAL,\r\n        },\r\n      },\r\n\r\n      // Radar\r\n      radar: {\r\n        polygons: {\r\n          fill: { colors: ['transparent'] },\r\n          strokeColors: theme.palette.divider,\r\n          connectorColors: theme.palette.divider,\r\n        },\r\n      },\r\n\r\n      // polarArea\r\n      polarArea: {\r\n        rings: {\r\n          strokeColor: theme.palette.divider,\r\n        },\r\n        spokes: {\r\n          connectorColors: theme.palette.divider,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Responsive\r\n    responsive: [\r\n      {\r\n        // sm\r\n        breakpoint: theme.breakpoints.values.sm,\r\n        options: {\r\n          plotOptions: { bar: { columnWidth: '40%' } },\r\n        },\r\n      },\r\n      {\r\n        // md\r\n        breakpoint: theme.breakpoints.values.md,\r\n        options: {\r\n          plotOptions: { bar: { columnWidth: '32%' } },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return merge(baseOptions, options);\r\n}\r\n","// import PropTypes from 'prop-types';\r\n// import ArrowPathIcon from '@heroicons/react/24/solid/ArrowPathIcon';\r\n// import ArrowRightIcon from '@heroicons/react/24/solid/ArrowRightIcon';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  SvgIcon\r\n} from '@mui/material';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { alpha, useTheme } from '@mui/material/styles';\r\nimport Chart  from 'react-apexcharts';\r\n\r\nconst useChartOptions = () => {\r\n  const theme = useTheme();\r\n\r\n  return {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: [theme.palette.primary.main, alpha(theme.palette.primary.main, 0.25)],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n      type: 'solid'\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      strokeDashArray: 2,\r\n      xaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '40px'\r\n      }\r\n    },\r\n    stroke: {\r\n      colors: ['transparent'],\r\n      show: true,\r\n      width: 2\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      axisTicks: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      categories: [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec'\r\n      ],\r\n      labels: {\r\n        offsetY: 5,\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        formatter: (value:any) => (value > 0 ? `${value} Assets` : `${value}`),\r\n        offsetX: -10,\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default function OverviewSales (props:any) {\r\n  const { chartSeries, sx } = props;\r\n  const chartOptions = useChartOptions();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Card sx={sx}>\r\n      <CardHeader\r\n        title=\"Month Maintenance\"\r\n      />\r\n      <CardContent>\r\n        <Chart\r\n          height={350}\r\n          options={chartOptions}\r\n          series={chartSeries}\r\n          type=\"bar\"\r\n          width=\"100%\"\r\n        />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions sx={{ justifyContent: 'flex-end' }}>\r\n        <Button\r\n          sx={{paddingLeft:3}}\r\n          color=\"inherit\"\r\n          endIcon={(\r\n            <SvgIcon fontSize=\"small\">\r\n              {/* <ArrowRightIcon /> */}\r\n            </SvgIcon>\r\n          )}\r\n          size=\"small\"\r\n          onClick={() => navigate('/app/admin/maintenance')}\r\n        >\r\n          Overview\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n","// import { format } from 'date-fns';\r\n// import PropTypes from 'prop-types';\r\n// import ArrowRightIcon from '@heroicons/react/24/solid/ArrowRightIcon';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  Divider,\r\n  SvgIcon,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow\r\n} from '@mui/material';\r\nimport formatTime from '../../caltime/millisectohms';\r\nimport Scrollbar from \"../../../components/scrollbar\";\r\n// import { Scrollbar } from 'src/components/scrollbar';\r\n// import { SeverityPill } from 'src/components/severity-pill';\r\n\r\nconst statusMap = {\r\n  pending: 'warning',\r\n  delivered: 'success',\r\n  refunded: 'error'\r\n};\r\n\r\nexport default function OverviewLatestOrders (props:any) {\r\n  const { orders = [], sx ,title} = props;\r\n\r\n  return (\r\n    <Card sx={sx}>\r\n      <CardHeader title={title}/>\r\n      {/* <Scrollbar sx={{ flexGrow: 1 }}> */}\r\n        <Box sx={{ minWidth: 700 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Assets\r\n                </TableCell>\r\n                <TableCell>\r\n                  Socket\r\n                </TableCell>\r\n                <TableCell sortDirection=\"asc\" >\r\n                  Remaining time\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status Rent\r\n                </TableCell>\r\n                {/* <TableCell>\r\n                  Status\r\n                </TableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order:any) => {\r\n                // const createdAt = format(order.createdAt, 'dd/MM/yyyy');\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    key={order.Asset_name_assets}\r\n                  >\r\n                    <TableCell>\r\n                      {order.Asset_name_assets}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {order.Match_mac_address} \r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {formatTime(order.Match_sum_used_time)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {order.Match_status_rent}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      {/* </Scrollbar> */}\r\n      <Divider />\r\n      <CardActions sx={{ justifyContent: 'flex-end' }}>\r\n        <Button\r\n          color=\"inherit\"\r\n          endIcon={(\r\n            <SvgIcon fontSize=\"small\">\r\n              {/* <ArrowRightIcon /> */}\r\n            </SvgIcon>\r\n          )}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\n","// import { format } from 'date-fns';\r\n// import PropTypes from 'prop-types';\r\n// import ArrowRightIcon from '@heroicons/react/24/solid/ArrowRightIcon';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardHeader,\r\n    Divider,\r\n    SvgIcon,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow\r\n  } from '@mui/material';\r\nimport formatTime from '../../caltime/millisectohms';  \r\n  // import { Scrollbar } from 'src/components/scrollbar';\r\n  // import { SeverityPill } from 'src/components/severity-pill';\r\n  \r\n  const statusMap = {\r\n    pending: 'warning',\r\n    delivered: 'success',\r\n    refunded: 'error'\r\n  };\r\n  \r\n  export default function OverviewLatestOrders (props:any) {\r\n    const { orders = [], sx ,title} = props;\r\n  \r\n    return (\r\n      <Card sx={sx}>\r\n        <CardHeader title={title}/>\r\n        {/* <Scrollbar sx={{ flexGrow: 1 }}> */}\r\n          <Box sx={{ minWidth: 700 }}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    Assets\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Remaining time\r\n                  </TableCell>\r\n                  <TableCell sortDirection=\"desc\">\r\n                    Date\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    Status\r\n                  </TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {orders.map((order:any) => {\r\n                  // const createdAt = format(order.createdAt, 'dd/MM/yyyy');\r\n  \r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      key={order.name_assets}\r\n                    >\r\n                      <TableCell>\r\n                        {order.name_assets}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {order.maintenance ? 'ควรส่งซ่อม' : 'ยังไม่ซ่อม'} \r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {new Date(order.date_assets).toLocaleString('sv-SE', { timeZone: 'Asia/Bangkok' })}\r\n                      </TableCell>\r\n                      {/* <TableCell>\r\n                        {order.Match_status_match}\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </Box>\r\n        {/* </Scrollbar> */}\r\n        <Divider />\r\n        <CardActions sx={{ justifyContent: 'flex-end' }}>\r\n          <Button\r\n            color=\"inherit\"\r\n            endIcon={(\r\n              <SvgIcon fontSize=\"small\">\r\n                {/* <ArrowRightIcon /> */}\r\n              </SvgIcon>\r\n            )}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            View all\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  ","import { Helmet } from 'react-helmet-async';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getDashboard } from \"../../services/apiservice\";\r\nimport { Dashboards, Matching, Assets } from \"../../model/model\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Unstable_Grid2 as Grid,\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n  Divider,\r\n  Box\r\n} from \"@mui/material\";\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport CardDashboard from '../../components/user/dashboard/carddashboard';\r\nimport Circle from '../../components/user/dashboard/Circle';\r\nimport Graph from '../../components/user/dashboard/graph';\r\nimport TableRemainingtime from '../../components/user/dashboard/TableRemainingtime'\r\nimport TableMaintenance from '../../components/user/dashboard/TableMaintenance'\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n  height: 60,\r\n  lineHeight: '60px',\r\n}));\r\nconst darkTheme = createTheme({ palette: { mode: 'dark' } });\r\nconst lightTheme = createTheme({ palette: { mode: 'light' } });\r\n\r\nconst HomeDashboard: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [ConDashboard, SetDashboard] = useState<Dashboards[]>([]);\r\n  const [Remainingtime, SetRemainingTime] = useState<Matching[]>([]);\r\n  const [Maintenance, SetMaintenance] = useState<Assets[]>([]);\r\n  const [role,setrole] = useState<string>(\"\")\r\n  const [DepartureRent,SetDepartureRent]:any = useState([])\r\n  const [Chart,SetChart]:any = useState([])\r\n  const ComponentDashboard = async (token: string) => {\r\n    const Alldashboards = await getDashboard(\"/Dashboard/AllDashboard\",token)\r\n    SetDashboard(Alldashboards.countall)\r\n    SetRemainingTime(Alldashboards.remainingtime)\r\n    SetMaintenance(Alldashboards.maintenance)\r\n    SetDepartureRent(Alldashboards.totaldeparturerent)\r\n    SetChart(Alldashboards.totalchart)\r\n    console.log(\"ddddddddd\",DepartureRent)\r\n    // await Alldashboards.totaldeparturerent.map((key:any) => {\r\n      \r\n    //   DepartureRent.push(key.departure)\r\n    //   TotalRent.push(Number(key.total))\r\n      \r\n    // });\r\n    // console.log(\"dsdsdsd\",TotalRent)\r\n    // let departure = []\r\n    // let total = []\r\n    // departure.push(key.departure)\r\n    // total.push(val.to)\r\n\r\n    // SetDashboard(await getDashboard(\"/Dashboard/AllDashboard\",token));\r\n    // console.log(ConDashboard)\r\n  };\r\n\r\n  useEffect(() => {\r\n    const item = localStorage.getItem(\"User\");\r\n    if (item && item !== \"undefined\") {\r\n      const user = JSON.parse(item);\r\n      ComponentDashboard(user.token);\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard | SmartSocket </title>\r\n      </Helmet>\r\n      <Box\r\n       component=\"main\"\r\n       sx={{\r\n         pt:3\r\n       }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n        {/* <Typography variant=\"h4\" sx={{ mb: 3,mt:2 }}>\r\n            Dashboard\r\n        </Typography> */}\r\n          {/* <Divider sx={{borderBottomWidth: 3,mb:2,borderColor:\"black\",borderRadius:1}}/> */}\r\n          <Grid container spacing={3}>\r\n            {ConDashboard.map((row: any, i: any) => (\r\n              <Grid\r\n              xs={12}\r\n              sm={6}\r\n              lg={3}\r\n            >\r\n              <CardDashboard \r\n                difference={12}\r\n                positive\r\n                sx={{ height: '100%' }}\r\n                value={row.amount}\r\n                topic={row.topic}\r\n                icon={row.icon}\r\n                />\r\n          </Grid>\r\n              ))}\r\n          <Grid\r\n            xs={12}\r\n            md={12}\r\n            lg={8}\r\n            >\r\n            <Graph\r\n              chartSeries={Chart}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            md={12}\r\n            lg={4}\r\n          >\r\n            <Circle\r\n              chartData={DepartureRent}\r\n              sx={{ height: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            md={12}\r\n            lg={6}\r\n          >\r\n            <TableRemainingtime\r\n              title={\"Maintenance is almost due\"}\r\n              orders={Remainingtime}\r\n              sx={{ height: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            md={12}\r\n            lg={6}\r\n          >\r\n            <TableMaintenance\r\n              title={\"Maintenance\"}\r\n              orders={Maintenance}\r\n              sx={{ height: '100%' }}\r\n            />\r\n          </Grid>\r\n          </Grid>\r\n      </Container>\r\n    </Box>\r\n    </>\r\n    \r\n  );\r\n};\r\nexport default HomeDashboard;\r\n"],"names":["CardWrapper","styled","Card","theme","overflow","position","content","width","height","background","borderRadius","top","right","CardDashboard","props","difference","positive","sx","value","topic","icon","CardActionArea","CardContent","Stack","alignItems","direction","justifyContent","spacing","Typography","color","variant","Avatar","backgroundColor","StyledChartWrapper","marginTop","alignContent","borderTop","palette","divider","CHART_HEIGHT","OverviewTraffic","chartData","useTheme","chartLabels","map","i","departure","chartSeries","Number","total","chartOptions","options","LABEL_TOTAL","show","label","text","secondary","fontSize","typography","subtitle2","fontWeight","lineHeight","LABEL_VALUE","offsetY","primary","h3","baseOptions","colors","main","warning","info","error","success","dark","chart","toolbar","zoom","enabled","animations","foreColor","disabled","fontFamily","states","hover","filter","type","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","lineCap","grid","strokeDashArray","borderColor","xaxis","lines","axisBorder","axisTicks","markers","size","strokeColors","paper","tooltip","x","legend","String","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","bar","columnWidth","borderRadiusApplication","borderRadiusWhenStacked","pie","donut","radialBar","track","strokeWidth","alpha","grey","radar","polygons","connectorColors","polarArea","rings","strokeColor","spokes","responsive","breakpoint","breakpoints","values","sm","md","merge","useChart","floating","dropShadow","fillSeriesColor","y","formatter","seriesName","title","CardHeader","dir","series","OverviewSales","stacked","yaxis","mode","categories","style","offsetX","useChartOptions","navigate","useNavigate","Divider","CardActions","Button","paddingLeft","endIcon","SvgIcon","onClick","OverviewLatestOrders","orders","Box","minWidth","Table","TableHead","TableRow","TableCell","sortDirection","TableBody","order","Asset_name_assets","Match_mac_address","formatTime","Match_sum_used_time","Match_status_rent","name_assets","maintenance","Date","date_assets","toLocaleString","timeZone","Paper","body2","textAlign","createTheme","useState","ConDashboard","SetDashboard","Remainingtime","SetRemainingTime","Maintenance","SetMaintenance","DepartureRent","SetDepartureRent","Chart","SetChart","ComponentDashboard","token","getDashboard","Alldashboards","countall","remainingtime","totaldeparturerent","totalchart","console","log","useEffect","item","localStorage","getItem","user","JSON","parse","component","pt","Container","maxWidth","container","row","xs","lg","amount"],"sourceRoot":""}