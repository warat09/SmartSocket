{"version":3,"file":"static/js/345.e0c366d8.chunk.js","mappings":"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","sources":["view/approve/ListApprove.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { filter } from 'lodash';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Approve } from \"../../model/model\";\r\nimport Iconify from \"../../components/iconify/Iconify\";\r\nimport {\r\n  getApprove,\r\n  ApproveUserMatch,\r\n} from \"../../services/apiservice\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Card,\r\n  TablePagination,\r\n  Checkbox,\r\n  IconButton,\r\n  //dialog\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,Snackbar,\r\n  Popover,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport Scrollbar from \"../../components/scrollbar/Scrollbar\";\r\nimport { UserListHead,UserListToolbar } from '../../components/user';\r\nimport { Icon } from '@iconify/react';\r\n\r\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'Asset_name_assets', label: 'Assets', alignRight: false },\r\n  { id: 'UserMatch_room', label: 'Room', alignRight: false },\r\n  { id: 'UserMatch_floor', label: 'Floor', alignRight: false },\r\n  { id: 'UserMatch_description', label: 'Description', alignRight: false },\r\n  { id: 'UserMatch_datetime', label: 'DateTime', alignRight: false },\r\n  { id: 'User_Name', label: 'Name', alignRight: false },\r\n  { id: 'UserMatch_status_user_match', label: 'Status', alignRight: false },\r\n  { id: 'User_action', label: 'Action', alignRight: false }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a:any, b:any, orderBy:any) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order:any, orderBy:any) {\r\n  return order === 'desc'\r\n    ? (a:any, b:any) => descendingComparator(a, b, orderBy)\r\n    : (a:any, b:any) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array:any, comparator:any, query:any) {\r\n  const stabilizedThis = array.map((el:any, index:any) => [el, index]);\r\n  stabilizedThis.sort((a:any, b:any) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user:any) => _user.Asset_name_assets.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el:any) => el[0]);\r\n}\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n  props,\r\n  ref\r\n) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst HomeApprove: React.FC = () => {\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const [listapprove, setlistapprove] = useState<Approve[]>([]);\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [dialog, setdialog] = React.useState({\r\n    header: \"\",\r\n    body: \"\",\r\n    id: 0,\r\n    status: 0,\r\n  });\r\n\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n\r\n  const [messagealert, setMessagealert]:any = useState({message:\"\",color:\"\"});\r\n\r\n  const [token, SetToken] = useState(\"\");\r\n  \r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected]:any = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('Asset_name_assets');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const ComponentMatch = async (token: string) => {\r\n    setlistapprove(await getApprove(\"/UserMatch/GetApprove\",token));\r\n  };\r\n\r\n  const handleClickOpen = (id: number, status: number, asset: string) => {\r\n    setOpenDialog(true);\r\n    if (status == 1) {\r\n      setdialog({\r\n        header: \"Approve?\",\r\n        body: `Do you want approve asset ${asset}`,\r\n        id: id,\r\n        status: status,\r\n      });\r\n    } else {\r\n      setdialog({\r\n        header: \"Reject?\",\r\n        body: `Do you want reject asset ${asset}`,\r\n        id: id,\r\n        status: status,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleClickDialog = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (\r\n    event?: React.SyntheticEvent | Event,\r\n    reason?: string\r\n  ) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const Checkapprove = async (id: number, status: number) => {\r\n    console.log(id, status);\r\n    let status_Approve=\"\"\r\n    \r\n    if (status === 1) {\r\n      console.log(\"1\")\r\n      // handleCloseDialog();\r\n      // handleClickDialog()\r\n      // handleClickOpen(status,asset)\r\n\r\n      // console.log(listapprove);\r\n      // console.log(\"approve\");\r\n      status_Approve=\"Approve\"\r\n     \r\n    } else {\r\n      // handleClickOpen(status,asset)\r\n      console.log(\"2\")\r\n      // handleCloseDialog();\r\n      // handleClickDialog()\r\n      status_Approve=\"Reject\"\r\n      // console.log(\"reject\");\r\n    }\r\n    await ApproveUserMatch(`/UserMatch/Approve/${id}`,token, status_Approve)\r\n  };\r\n\r\n  const handleOpenMenu = (event:any) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleRequestSort = (event:any, property:any) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event:any) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds:any = listapprove.map((n:any) => n.Asset_name_assets);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event:any, name:any) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected:any = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event:any, newPage:any) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event:any) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event:any) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - listapprove.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(listapprove, getComparator(order, orderBy), filterName);\r\n  \r\n  const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n  useEffect(() => {\r\n    const item = localStorage.getItem(\"User\");\r\n    if(window.history.state !== null){\r\n      const {open,message} = window.history.state;\r\n      if(open === 1) {\r\n        setMessagealert({message:message,color:\"success\"})\r\n        setOpenAlert(true);\r\n        window.history.replaceState({}, \"\", \"\");\r\n      }\r\n    }\r\n    if (item && item !== \"undefined\") {\r\n      const user = JSON.parse(item);\r\n      ComponentMatch(user.token);\r\n      SetToken(user.token)\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n          <title> Approve | SmartSocket </title>\r\n      </Helmet>\r\n      <Container>\r\n        <Typography variant=\"h4\" sx={{ mb: 5,mt:2 }}>\r\n          Approve\r\n        </Typography>\r\n        <Divider sx={{borderBottomWidth: 3,mb:2,borderColor:\"black\",borderRadius:1}}/>\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listapprove.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:any) => {\r\n                    console.log(row)\r\n                    \r\n                    const { Asset_name_assets, UserMatch_room, UserMatch_floor, UserMatch_description, UserMatch_datetime, User_name, User_surname, User_username, UserMatch_status_user_match }:any = row;\r\n                    const selectedUser = selected.indexOf(Asset_name_assets) !== -1;\r\n\r\n                    return (\r\n                      <TableRow hover key={Asset_name_assets} tabIndex={-1} role=\"checkbox\" selected={selectedUser}>\r\n                        {/* <TableCell padding=\"checkbox\">\r\n                          <Checkbox checked={selectedUser} onChange={(event) => handleClick(event, Asset_name_assets)} />\r\n                        </TableCell> */}\r\n\r\n                        <TableCell align=\"center\">{Asset_name_assets}</TableCell>\r\n\r\n                        <TableCell align=\"center\">{UserMatch_room}</TableCell>\r\n\r\n                        <TableCell align=\"center\">{UserMatch_floor}</TableCell>\r\n\r\n                        <TableCell align=\"center\">\r\n                          {/* {UserMatch_description ? UserMatch_description : '-'} */}\r\n                          <TextField\r\n                              InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                              type=\"text\"\r\n                              multiline\r\n                              rows={2}\r\n                              defaultValue={UserMatch_description ? UserMatch_description : 'No Description'}\r\n                            />\r\n                        </TableCell>\r\n\r\n                        <TableCell align=\"center\">{new Date(UserMatch_datetime).toLocaleString('sv-SE', { timeZone: 'Asia/Bangkok' })}</TableCell>\r\n\r\n                        <TableCell align=\"center\">{User_name+\" \"+User_surname}</TableCell>\r\n\r\n                        <TableCell align=\"center\">{UserMatch_status_user_match}</TableCell>\r\n                \r\n                        <TableCell align=\"center\">\r\n                          <Box sx={{display:'flex',justifyContent:'center'}}>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            color=\"success\"\r\n                            onClick={() =>\r\n                              handleClickOpen(\r\n                                row.UserMatch_id_user_match,\r\n                                1,\r\n                                row.Asset_name_assets\r\n                              )\r\n                            }\r\n                          >\r\n                            Approve\r\n                          </Button>\r\n                          &nbsp;\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() =>\r\n                              handleClickOpen(\r\n                                row.UserMatch_id_user_match,\r\n                                0,\r\n                                row.Asset_name_assets\r\n                              )\r\n                            }\r\n                          >\r\n                            Reject\r\n                          </Button>\r\n                          </Box>\r\n                         </TableCell>\r\n\r\n                        {/* <TableCell align=\"left\">\r\n                          <Label color={(status === 'banned' && 'error') || 'success'}>{sentenceCase(status)}</Label>\r\n                        </TableCell> */}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n\r\n                {isNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={9} sx={{ py: 3 }}>\r\n                        <Paper\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h6\" paragraph>\r\n                            Not found\r\n                          </Typography>\r\n\r\n                          <Typography variant=\"body2\">\r\n                            No results found for &nbsp;\r\n                            <strong>&quot;{filterName}&quot;</strong>.\r\n                            <br /> Try checking for typos or using complete words.\r\n                          </Typography>\r\n                        </Paper>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={listapprove.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n        \r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <Iconify icon={\"eva:edit-fill\"} sx={{ mr: 2 }}/>\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem sx={{ color: 'error.main' }}>\r\n          <Iconify icon={\"eva:trash-2-outline\"} sx={{ mr: 2 }}/>\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n\r\n      <Dialog\r\n          open={openDialog}\r\n          onClose={handleCloseDialog}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{dialog.header}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {dialog.body}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCloseDialog}>Disagree</Button>\r\n            <Button\r\n              onClick={() => Checkapprove(dialog.id, dialog.status)}\r\n              autoFocus\r\n            >\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Snackbar\r\n          open={openAlert}\r\n          autoHideDuration={6000}\r\n          onClose={handleCloseAlert}\r\n        >\r\n          <Alert\r\n            onClose={handleCloseAlert}\r\n            severity={messagealert.color}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {messagealert.message}!\r\n          </Alert>\r\n        </Snackbar>\r\n    </>\r\n  );\r\n};\r\nexport default HomeApprove;\r\n"],"names":["TABLE_HEAD","id","label","alignRight","descendingComparator","a","b","orderBy","Alert","React","props","ref","elevation","variant","navigate","useNavigate","useState","listapprove","setlistapprove","openDialog","setOpenDialog","header","body","status","dialog","setdialog","openAlert","setOpenAlert","message","color","messagealert","setMessagealert","token","SetToken","open","setOpen","page","setPage","order","setOrder","selected","setSelected","setOrderBy","filterName","setFilterName","rowsPerPage","setRowsPerPage","ComponentMatch","getApprove","handleClickOpen","asset","handleCloseDialog","handleCloseAlert","event","reason","Checkapprove","console","log","status_Approve","ApproveUserMatch","emptyRows","Math","max","length","filteredUsers","array","comparator","query","stabilizedThis","map","el","index","sort","filter","_user","Asset_name_assets","toLowerCase","indexOf","applySortFilter","getComparator","isNotFound","useEffect","item","localStorage","getItem","window","history","state","replaceState","user","JSON","parse","Container","Typography","sx","mb","mt","Divider","borderBottomWidth","borderColor","borderRadius","Card","numSelected","onFilterName","target","value","Scrollbar","TableContainer","minWidth","Table","headLabel","rowCount","onRequestSort","property","onSelectAllClick","checked","newSelecteds","n","TableBody","slice","row","UserMatch_room","UserMatch_floor","UserMatch_description","UserMatch_datetime","User_name","User_surname","UserMatch_status_user_match","User_username","selectedUser","TableRow","hover","tabIndex","role","TableCell","align","TextField","InputProps","readOnly","type","multiline","rows","defaultValue","Date","toLocaleString","timeZone","Box","display","justifyContent","Button","size","onClick","UserMatch_id_user_match","style","height","colSpan","py","Paper","textAlign","paragraph","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Popover","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","p","width","px","typography","MenuItem","Iconify","icon","mr","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Snackbar","autoHideDuration","severity"],"sourceRoot":""}