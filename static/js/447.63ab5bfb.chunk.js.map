{"version":3,"file":"static/js/447.63ab5bfb.chunk.js","mappings":"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","sources":["view/maintenance/Maintenance.tsx"],"sourcesContent":["import React, { useEffect, useState, forwardRef } from \"react\";\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { filter } from 'lodash';\r\nimport {\r\n    Typography,\r\n    Container,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Button,\r\n    Divider,\r\n    TableContainer,\r\n    Card,\r\n    TablePagination,\r\n    Checkbox,\r\n    Popover,\r\n    MenuItem,\r\n    IconButton,\r\n    Box,\r\n    Stack,\r\n    Avatar,\r\n      //dialog\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Snackbar,\r\n  Alert,\r\n\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  FormHelperText,\r\n  CardHeader,\r\n  CardContent,\r\n  Unstable_Grid2 as Grid,\r\n  CardActions,\r\n  Input\r\n  } from \"@mui/material\";\r\n  import Iconify from \"../../components/iconify/Iconify\";\r\n  import Scrollbar from \"../../components/scrollbar/Scrollbar\";\r\n  import { UserListHead,UserListToolbar } from '../../components/user';\r\n  import { getUsers,SelectAssetMaintenance,AddStatusMaintenance } from \"../../services/apiservice\";\r\n  import { User } from \"../../model/model\";\r\n  import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport formatTime from '../../components/caltime/millisectohms'\r\nimport StepConnector, {\r\n  stepConnectorClasses\r\n} from \"@mui/material/StepConnector\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport HandymanTwoToneIcon from '@mui/icons-material/HandymanTwoTone';\r\nimport CheckCircleTwoToneIcon from '@mui/icons-material/CheckCircleTwoTone';\r\nimport HourglassTopTwoToneIcon from '@mui/icons-material/HourglassTopTwoTone';\r\nimport AssignmentTwoToneIcon from '@mui/icons-material/AssignmentTwoTone';\r\nimport { StepIconProps } from \"@mui/material/StepIcon\";\r\n  interface LocalStorage {\r\n    username: string;\r\n    token: string;\r\n  }\r\n\r\n  const TABLE_HEAD:{ id: string, label: string,alignRight: boolean }[] = [\r\n    { id: 'opendiv', label: '', alignRight: false  },\r\n    { id: 'Asset_name', label: 'Assets', alignRight: false },\r\n    { id: 'Asset_expire_hour', label: 'ExpireHour', alignRight: false },\r\n    { id: 'Match_remain_time', label: 'TimeUse', alignRight: false },\r\n    { id: '', label: 'Action', alignRight: false  },\r\n  ];\r\n\r\n  function descendingComparator(a:any, b:any, orderBy:any) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  function getComparator(order:any, orderBy:any) {\r\n    return order === 'desc'\r\n      ? (a:any, b:any) => descendingComparator(a, b, orderBy)\r\n      : (a:any, b:any) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\n  function applySortFilter(array:any, comparator:any, query:any) {\r\n    const stabilizedThis = array.map((el:any, index:any) => [el, index]);\r\n    stabilizedThis.sort((a:any, b:any) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    if (query) {\r\n      return filter(array, (_user:any) => _user.fullname.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n    }\r\n    return stabilizedThis.map((el:any) => el[0]);\r\n  }\r\nconst HomeMaintenance: React.FC=()=>{\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [Token,setToken] = useState<string>(\"\")\r\n\r\n  const [listuser,setlistUser] = useState<[]>([])\r\n\r\n  const [listMaintenance,setlistMaintenance] = useState<[]>([])\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected]:any = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('Asset_name');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n\r\n  const [messagealert, setMessagealert]:any = useState({message:\"\",color:\"\"});\r\n\r\n  const [Disable,setdisable] = useState(\"\");\r\n\r\n    const ComponentUser = async(token:string) => {\r\n        setlistUser(await getUsers(\"/Maintenance/AllMaintenance\",token))\r\n        setlistMaintenance(await SelectAssetMaintenance(\"/Match/SelectMaintenance\",token))\r\n      }\r\n\r\n      const handleRequestSort = (event:any, property:any) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n      };\r\n    \r\n      const handleSelectAllClick = (event:any) => {\r\n        if (event.target.checked) {\r\n          const newSelecteds:any = listuser.map((n:any) => n.id_user);\r\n          setSelected(newSelecteds);\r\n          return;\r\n        }\r\n        setSelected([]);\r\n      };\r\n    \r\n      const handleChangePage = (event:any, newPage:any) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event:any) => {\r\n        setPage(0);\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n      };\r\n    \r\n      const handleFilterByName = (event:any) => {\r\n        setPage(0);\r\n        setFilterName(event.target.value);\r\n      };\r\n\r\n      const handleCloseAlert = (\r\n        event?: React.SyntheticEvent | Event,\r\n        reason?: string\r\n      ) => {\r\n        if (reason === \"clickaway\") {\r\n          return;\r\n        }\r\n    \r\n        setOpenAlert(false);\r\n      };\r\n    \r\n      const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - listuser.length) : 0;\r\n    \r\n      const filteredUsers = applySortFilter(listuser, getComparator(order, orderBy), filterName);\r\n      \r\n      const isNotFound = !filteredUsers.length && !!filterName;\r\n    \r\n      //------------------------------//\r\n      function Row(props:any) {\r\n        const { row }:any = props;\r\n        const { Match_status_rent,Asset_name,Asset_expire_hour,Match_sum_used_time,History }:any = row;\r\n        const [openTable, setOpenTable] = useState(false);\r\n        const [rowsPage, setPerPage] = useState(4);\r\n        const [pageTable, setPageTable] = useState(0);\r\n        const [completed, setCompleted]:any = useState(undefined);\r\n        const handleChangePageTable = (event:any, newPage:any) => {\r\n          setPageTable(newPage);\r\n        };\r\n        const handleChangeRowsPage = (event:any) => {\r\n          setPageTable(0);\r\n          setPerPage(parseInt(event.target.value, 10));\r\n        };\r\n        const handleAddStatus = async(status:string,asset:number) => {\r\n          await AddStatusMaintenance(\"/Maintenance/AddStatusMaintenance\",Token,status,asset)\r\n        }\r\n        const ColorlibStepIconRoot = styled(\"div\")<{\r\n          ownerState: { completed?: boolean; active?: boolean };\r\n        }>(({ theme, ownerState }) => ({\r\n          backgroundColor:\r\n            theme.palette.mode === \"dark\" ? theme.palette.grey[700] : \"#ccc\",\r\n          zIndex: 1,\r\n          color: \"#fff\",\r\n          width: 50,\r\n          height: 50,\r\n          display: \"flex\",\r\n          borderRadius: \"50%\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          ...(ownerState.active && {\r\n            backgroundImage:\r\n              \"linear-gradient(315deg, #29539b 0%, #1e3b70 74%)\",\r\n            boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\"\r\n          }),\r\n          ...(ownerState.completed && {\r\n            backgroundImage:\r\n              \"linear-gradient(315deg, #29539b 0%, #1e3b70 74%)\"\r\n          })\r\n        }));\r\n        const ColorlibConnector = styled(StepConnector)(({ theme }) => ({\r\n          [`&.${stepConnectorClasses.alternativeLabel}`]: {\r\n            top: 22\r\n          },\r\n          [`&.${stepConnectorClasses.active}`]: {\r\n            [`& .${stepConnectorClasses.line}`]: {\r\n              backgroundImage:\r\n                \"linear-gradient(315deg, #29539b 0%, #1e3b70 74%)\"\r\n            }\r\n          },\r\n          [`&.${stepConnectorClasses.completed}`]: {\r\n            [`& .${stepConnectorClasses.line}`]: {\r\n              backgroundImage:\r\n                \"linear-gradient(315deg, #29539b 0%, #1e3b70 74%)\"\r\n            }\r\n          },\r\n          [`& .${stepConnectorClasses.line}`]: {\r\n            height: 3,\r\n            border: 0,\r\n            backgroundColor:\r\n              theme.palette.mode === \"dark\" ? theme.palette.grey[800] : \"#eaeaf0\",\r\n            borderRadius: 1\r\n          }\r\n        }));\r\n        function ColorlibStepIcon(props: StepIconProps) {\r\n          const { active, completed, className } = props;\r\n        \r\n          const icons: { [index: string]: React.ReactElement } = {\r\n            1: <HourglassTopTwoToneIcon />,\r\n            2: <AssignmentTwoToneIcon />,\r\n            3: <HandymanTwoToneIcon />,\r\n            4: <CheckCircleTwoToneIcon />\r\n          };\r\n        \r\n          return (\r\n            <ColorlibStepIconRoot\r\n              ownerState={{ completed, active }}\r\n              className={className}\r\n            >\r\n              {icons[String(props.icon)]}\r\n            </ColorlibStepIconRoot>\r\n          );\r\n        }\r\n        let statusstep = 0;\r\n        const steps = [\r\n          \"Waiting for Delivery\",\r\n          \"Request Accepted\",\r\n          \"Maintenancing\",\r\n          \"Success Maintenance\"\r\n        ];\r\n        const stepbutton = [\r\n          \"Request Accepted\",\r\n          \"Maintenancing\",\r\n          \"Success Maintenance\"\r\n        ]\r\n        switch(History[0].Maintenance_status_maintenance) {\r\n          case  \"Waiting for Delivery\":\r\n            // code block\r\n            break;\r\n          case \"Request Accepted\":\r\n            // code block\r\n            statusstep = statusstep+1;\r\n            break;\r\n          case \"Maintenancing\":\r\n            statusstep = statusstep+2;\r\n            break;\r\n          case \"Success Maintenance\":\r\n            statusstep = statusstep+3;\r\n            stepbutton[3] = \"success\"\r\n            // setCompleted(true)\r\n            break;\r\n          default:\r\n            break;\r\n            // code block\r\n        }\r\n        \r\n\r\n        return(\r\n      <React.Fragment>\r\n        <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }} >\r\n          <TableCell>\r\n            <IconButton\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => setOpenTable(!openTable)}\r\n            >\r\n              {openTable ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n\r\n\r\n          <TableCell align=\"center\">{Asset_name}</TableCell>\r\n\r\n          <TableCell align=\"center\">{formatTime(Asset_expire_hour)}</TableCell>\r\n\r\n          <TableCell align=\"center\">{formatTime(Match_sum_used_time)}</TableCell>\r\n          <TableCell align=\"center\">\r\n            {Match_status_rent === \"Available\" &&\r\n              <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"success\"\r\n              onClick={()=>handleAddStatus(stepbutton[statusstep],row.History[0].Maintenance_id_assets)}\r\n              >\r\n                {stepbutton[statusstep]}\r\n              </Button>       \r\n            }\r\n            {Match_status_rent !== \"Available\" &&\r\n              <Button\r\n              disabled\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"success\"\r\n              onClick={()=>handleAddStatus(stepbutton[statusstep],row.History[0].Maintenance_id_assets)}\r\n              >\r\n                {stepbutton[statusstep]}\r\n              </Button>       \r\n            }\r\n              \r\n          </TableCell>\r\n\r\n       </TableRow>\r\n       <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={5}>\r\n          <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ paddingTop:3,paddingBottom:3}}>\r\n              {/* <Typography variant=\"h6\" gutterBottom component=\"div\" sx={{display:'flex',alignContent:'center'}}>\r\n                History Maintenance\r\n              </Typography> */}\r\n              <Box sx={{ width: \"100%\" ,paddingTop:5,paddingBottom:5}}>\r\n              <Stepper\r\n                alternativeLabel\r\n                activeStep={statusstep}\r\n                connector={<ColorlibConnector />}\r\n              >\r\n                  {steps.map((label) => (\r\n                    <Step key={label}>\r\n                      <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                    </Step>\r\n                  ))}\r\n                </Stepper>\r\n              </Box>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\">Status</TableCell>\r\n                    <TableCell align=\"center\">Date</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {History.slice(pageTable * rowsPage, pageTable * rowsPage + rowsPage).map((historyRow:any) => (\r\n                    <TableRow key={historyRow.Maintenance_id_maintenance}>\r\n                      <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                        {historyRow.Maintenance_status_maintenance}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{new Date(historyRow.Maintenance_date_maintenance).toLocaleString('sv-SE', { timeZone: 'Asia/Bangkok' })}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                    rowsPerPageOptions={[4, 8, 12]}\r\n                    component=\"div\"\r\n                    count={History.length}\r\n                    rowsPerPage={rowsPage}\r\n                    page={pageTable}\r\n                    onPageChange={handleChangePageTable}\r\n                    onRowsPerPageChange={handleChangeRowsPage}\r\n                />\r\n            </Box>\r\n            \r\n          </Collapse>\r\n          \r\n        </TableCell>\r\n        \r\n      </TableRow>\r\n      \r\n      </React.Fragment>\r\n        )\r\n\r\n      }\r\n\r\n      useEffect(() => {\r\n        const item = localStorage.getItem(\"User\");\r\n        if(window.history.state !== null){\r\n          const {open,message} = window.history.state;\r\n          if(open === 1) {\r\n            setMessagealert({message:message,color:\"success\"})\r\n            setOpenAlert(true);\r\n            window.history.replaceState({}, \"\", \"\");\r\n          }\r\n        }\r\n          if (item && item !== \"undefined\") {\r\n            const user:LocalStorage = JSON.parse(item);\r\n            ComponentUser(user.token);\r\n            setToken(user.token);\r\n          }\r\n          else{\r\n            navigate('/login')\r\n          }\r\n      }, []);\r\n\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <title> Maintenance: List | SmartSocket </title>\r\n            </Helmet>\r\n            <Container>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ mb: 5,mt:2 }}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Maintenance\r\n                </Typography>\r\n            </Stack>\r\n            <Divider sx={{borderBottomWidth: 3,mb:3,borderColor:\"black\",borderRadius:1}}/>\r\n            <Card>\r\n                <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n                <Scrollbar>\r\n                    <TableContainer sx={{ minWidth: 800 }}>\r\n                    <Table>\r\n                        <UserListHead\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        headLabel={TABLE_HEAD}\r\n                        rowCount={listuser.length}\r\n                        numSelected={selected.length}\r\n                        onRequestSort={handleRequestSort}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        />\r\n                        <TableBody>\r\n                        {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:any,index:any) => {\r\n                            // const { id_user,id_card,fullname,email,departure,role,status_user }:any = row;\r\n                            // const selectedUser = selected.indexOf(id_user) !== -1;\r\n\r\n                            return (\r\n                              <Row row={row} />\r\n                            );\r\n                        })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                        </TableBody>\r\n\r\n                        {isNotFound && (\r\n                        <TableBody>\r\n                            <TableRow>\r\n                            <TableCell align=\"center\" colSpan={7} sx={{ py: 3 }}>\r\n                                <Paper\r\n                                sx={{\r\n                                    textAlign: 'center',\r\n                                }}\r\n                                >\r\n                                <Typography variant=\"h6\" paragraph>\r\n                                    Not found\r\n                                </Typography>\r\n\r\n                                <Typography variant=\"body2\">\r\n                                    No results found for &nbsp;\r\n                                    <strong>&quot;{filterName}&quot;</strong>.\r\n                                    <br /> Try checking for typos or using complete words.\r\n                                </Typography>\r\n                                </Paper>\r\n                            </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                        )}\r\n                    </Table>\r\n                    </TableContainer>\r\n                </Scrollbar>\r\n\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={listuser.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n             </Card>\r\n            </Container>\r\n            <Snackbar\r\n              open={openAlert}\r\n              autoHideDuration={6000}\r\n              onClose={handleCloseAlert}\r\n            >\r\n              <Alert\r\n                onClose={handleCloseAlert}\r\n                severity={messagealert.color}\r\n                sx={{ width: \"100%\" }}\r\n              >\r\n                {messagealert.message}!\r\n              </Alert>\r\n            </Snackbar>               \r\n        </>\r\n    );\r\n}\r\nexport default HomeMaintenance"],"names":["TABLE_HEAD","id","label","alignRight","descendingComparator","a","b","orderBy","navigate","useNavigate","useState","Token","setToken","listuser","setlistUser","setlistMaintenance","page","setPage","order","setOrder","selected","setSelected","setOrderBy","filterName","setFilterName","rowsPerPage","setRowsPerPage","openAlert","setOpenAlert","message","color","messagealert","setMessagealert","ComponentUser","token","getUsers","SelectAssetMaintenance","handleCloseAlert","event","reason","emptyRows","Math","max","length","filteredUsers","array","comparator","query","stabilizedThis","map","el","index","sort","filter","_user","fullname","toLowerCase","indexOf","applySortFilter","getComparator","isNotFound","Row","props","row","Match_status_rent","Asset_name","Asset_expire_hour","Match_sum_used_time","History","openTable","setOpenTable","rowsPage","setPerPage","pageTable","setPageTable","undefined","handleAddStatus","status","asset","AddStatusMaintenance","ColorlibStepIconRoot","styled","theme","ownerState","backgroundColor","palette","mode","grey","zIndex","width","height","display","borderRadius","justifyContent","alignItems","active","backgroundImage","boxShadow","completed","ColorlibConnector","StepConnector","stepConnectorClasses","top","border","ColorlibStepIcon","className","icons","String","icon","statusstep","stepbutton","Maintenance_status_maintenance","sx","borderBottom","size","onClick","align","formatTime","variant","Maintenance_id_assets","disabled","style","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","alternativeLabel","activeStep","connector","StepIconComponent","slice","historyRow","component","scope","Date","Maintenance_date_maintenance","toLocaleString","timeZone","Maintenance_id_maintenance","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","useEffect","item","localStorage","getItem","window","history","state","open","replaceState","user","JSON","parse","direction","mb","mt","gutterBottom","borderBottomWidth","borderColor","numSelected","onFilterName","minWidth","headLabel","rowCount","onRequestSort","property","onSelectAllClick","checked","newSelecteds","n","id_user","py","textAlign","paragraph","autoHideDuration","onClose","severity"],"sourceRoot":""}